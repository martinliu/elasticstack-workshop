洞察 GitHub 中开源项目的开发效能

从此我在也不担心你只会数星星了。让我们用Kibana对项目开发效能做深度的探索吧！

实战教程见：https://elastic.martinliu.cn/chapter1/2/

开源项目的火热程度取决于技术创新和行业发展趋势，有很多风口浪尖的开源项目确实非常吸引人。GitHub 中的开源项目质量好不好，是不是数项目获得的星星就够了？该如何洞察开源项目的社区参与程度？如何判断项目核心开发团队的研发效能？为了回答这些颇具深度的问题，我们还需要对项目进行更深度的分析。本教程教你使用 Elastic Stack 构建 GitHub 开源项目的关键指标的分析看板，在 Kibana 中详细分析项目的几个重要维度。

https://videos.elastic.co/watch/2xqpUL4ttAu7iPQQp6vrub?

ORK console.log();

// overall 项目年龄计算
if (doc['fields.kpi.keyword'].value == 'overall') {
    ZonedDateTime zdt1 = doc['json.created_at'].value;
    ZonedDateTime zdt2 = doc['event.created'].value;
    long years = ChronoUnit.YEARS.between(zdt1, zdt2);
    return years 
  } 
  
// issue 的年龄计算
if (doc['fields.kpi.keyword'].value == 'issues') {
    if (doc['json.state'].value == 'open' ) {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['event.created'].value; //需要优化成 Today 的日期
        long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
        return minutes 
    } else {
            ZonedDateTime zdt1 = doc['json.created_at'].value;
            ZonedDateTime zdt2 = doc['json.closed_at'].value;
            long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
            return minutes 
    }
} 

// pull request 的年龄计算
if (doc['fields.kpi.keyword'].value == 'pulls') {
    if (doc['json.closed_at'].size() == 0 ) {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['event.created'].value; //需要优化成 Today 的日期
        long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
        return minutes 
    } else {
            ZonedDateTime zdt1 = doc['json.created_at'].value;
            ZonedDateTime zdt2 = doc['json.closed_at'].value;
            long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
            return minutes 
    }
} 
return 0

//TODO： 1 zdt2 需要做当天日期的取值运算
//TODO： 2 json.closed_at 需要换成 json.state 


---backup 1

// 对 overall 做项目年龄计算
if (doc['fields.kpi.keyword'].value == 'overall') {
    ZonedDateTime zdt1 = doc['json.created_at'].value;
    ZonedDateTime zdt2 = doc['event.created'].value;
    long years = ChronoUnit.YEARS.between(zdt1, zdt2);
    return years 
} 
  
// 对 issue 做年龄计算
if (doc['fields.kpi.keyword'].value == 'issues') {
    if (doc['json.closed_at'].size() == 0 ) {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['event.created'].value;
        long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
        return minutes 
    } else {
            ZonedDateTime zdt1 = doc['json.created_at'].value;
            ZonedDateTime zdt2 = doc['json.closed_at'].value;
            long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
            return minutes 
    }
} 

// 对 pull request 做年龄计算
if (doc['fields.kpi.keyword'].value == 'pulls') {
    if (doc['json.closed_at'].size() == 0 ) {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['event.created'].value;
        long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
        return minutes 
    } else {
            ZonedDateTime zdt1 = doc['json.created_at'].value;
            ZonedDateTime zdt2 = doc['json.closed_at'].value;
            long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
            return minutes 
    }
} 
return 0

//TODO： 1 zdt2 需要做当天日期的取值运算
//TODO： 2 json.closed_at 需要换成 json.state 


if (doc['fields.kpi.keyword'].value == 'overall') {
    // do something if "item" is missing
      ZonedDateTime zdt1 = doc['json.created_at'].value;
      ZonedDateTime zdt2 = doc['json.updated_at'].value;
      long years = ChronoUnit.YEARS.between(zdt1, zdt2);
      return years 
} 

if (doc['fields.kpi.keyword'].value == 'issues') {
    // do something if "item" is missing
  if (doc['json.closed_at'].size() == 0 ) {
      ZonedDateTime zdt1 = doc['json.created_at'].value;
      ZonedDateTime zdt2 = doc['event.created'].value;
      long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
      return minutes 
  } else {
          ZonedDateTime zdt1 = doc['json.created_at'].value;
          ZonedDateTime zdt2 = doc['json.closed_at'].value;
          long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
          return minutes 
  }
} 

if (doc['fields.kpi.keyword'].value == 'pulls') {
    // do something if "item" is missing
  if (doc['json.closed_at'].size() == 0 ) {
      ZonedDateTime zdt1 = doc['json.created_at'].value;
      ZonedDateTime zdt2 = doc['event.created'].value;
      long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
      return minutes 
  } else {
          ZonedDateTime zdt1 = doc['json.created_at'].value;
          ZonedDateTime zdt2 = doc['json.closed_at'].value;
          long minutes = ChronoUnit.MINUTES.between(zdt1, zdt2);
          return minutes 
  }
} 
return 0


PUT filebeat-7/_settings
{
  "index.mapping.total_fields.limit": 5000
}



if ( doc['json.created_at'].size() != 0)
{
    if ( doc['json.closed_at'].size() == 0 ) 
    {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['json.updated_at'].value;
        long years = ChronoUnit.YEARS.between(zdt1, zdt2);
        return years   
    }
    else
    {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['json.closed_at'].value;
        long days = ChronoUnit.DAYS.between(zdt1, zdt2);
        return days
    }
}

return 0

----

if (doc['fields.kpi'].value == 'overall') {
    // do something if "item" is missing
      ZonedDateTime zdt1 = doc['json.created_at'].value;
      ZonedDateTime zdt2 = doc['json.updated_at'].value;
      long years = ChronoUnit.YEARS.between(zdt1, zdt2);
      return years 
  } else if (doc['fields.kpi'].value == 'issues') {
    // do something if "item" value is: something
          ZonedDateTime zdt1 = doc['json.created_at'].value;
          ZonedDateTime zdt2 = doc['json.closed_at'].value;
          long days = ChronoUnit.DAYS.between(zdt1, zdt2);
          return days  
  } else  if (doc['fields.kpi'].value == 'pulls') {
    // do something else
    return 0
  }
  return 0


---

if ( doc['json.created_at'].size() != 0)
{
    if ( doc['json.closed_at'].size() == 0 ) 
    {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['json.updated_at'].value;
        long years = ChronoUnit.YEARS.between(zdt1, zdt2);
        return years   
    }
    else
    {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['json.closed_at'].value;
        long days = ChronoUnit.DAYS.between(zdt1, zdt2);
        return days
    }
}

return 0



if (doc['fields.kpi'] == 'overall')
{
    ZonedDateTime zdt1 = doc['json.created_at'].value;
    ZonedDateTime zdt2 = doc['json.updated_at'].value;
    long years = ChronoUnit.YEARS.between(zdt1, zdt2);
    return years  
} else 


"dynamic": "runtime",
        "runtime": {
            "project-age": {
                "type": "long",
                "script": {
                    "source": "emit(doc['json.updated_at'].value.year - doc['json.created_at'].value.year)"
                }
            }
        },

if ( doc['json.created_at'].size() != 0)
{
    if ( doc['json.closed_at'].size() == 0 ) 
    {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['json.updated_at'].value;
        long years = ChronoUnit.YEARS.between(zdt1, zdt2);
        return years   
    }
    elase
    {
        ZonedDateTime zdt1 = doc['json.created_at'].value;
        ZonedDateTime zdt2 = doc['json.updated_at'].value;
        long years = ChronoUnit.YEARS.between(zdt1, zdt2);
        return years
    }
}

return 0



  if (   == "overall") {
    ZonedDateTime zdt1 = doc['overall.created_at'].value;
    ZonedDateTime zdt2 = doc['overall.updated_at'].value;
    long differenceInMillis = ChronoUnit.YEARS.between(zdt1, zdt2);
    return  differenceInMillis
}

ZonedDateTime zdt1 = doc['overall.created_at'].value;
ZonedDateTime zdt2 = doc['overall.updated_at'].value;
long differenceInMillis = ChronoUnit.YEARS.between(zdt1, zdt2);
return  differenceInMillis
  
  
    - copy_fields:
    fields:
      - from: 
        to:
- copy_fields:
    fields:
      - from: 
        to:
- copy_fields:
    fields:
      - from: 
        to:
- copy_fields:
    fields:
      - from: 
        to:
- copy_fields:
    fields:
      - from: 
        to:
- copy_fields:
    fields:
      - from: 
        to:
- copy_fields:
    fields:
      - from: 
        to:


POST _ingest/pipeline/_simulate
{
  "pipeline": {
    "processors": [
      {
        "script": {
          "description": "How old is this opensource project?",
          "lang": "painless",
          "source": """
          if (ctx['json.created_at'] != null ) {
            ZonedDateTime zdt1 = ZonedDateTime.parse(ctx['json.created_at']);
            ZonedDateTime zdt2 = ZonedDateTime.parse(ctx['json.updated_at']);
            String nowString = params['now'];
            long years = ChronoUnit.YEARS.between(zdt1, zdt2);
            ctx['project_age'] = years;
          }
          """
        }
      }
    ]
  },
  "docs": [
    {
      "_source": {
       "json.created_at": "2013-07-30T20:04:05Z",
        "json.updated_at": "2015-07-30T20:04:05Z"
      }
    }
  ]
}


PUT _ingest/pipeline/calculate-ages
{
    "processors": [
      {
        "script": {
          "description": "How old is this opensource project?",
          "lang": "painless",
          "source": """
          if (ctx['json.created_at'] != null ) {
            ZonedDateTime zdt1 = ZonedDateTime.parse(ctx['json.created_at']);
            ZonedDateTime zdt2 = ZonedDateTime.parse(ctx['json.updated_at']);
            String nowString = params['now'];
            long years = ChronoUnit.YEARS.between(zdt1, zdt2);
            ctx['json.project_age'] = years;
          }
          """
        }
      }
    ],
    "on_failure": [
    {
      "append": {
        "field": "meta.errors",
        "value": "{{ _ingest.on_failure_message }}, {{ _ingest.on_failure_processor_type }}, {{ _ingest.on_failure_processor_tag }}"
      }
    },
    {
      "set": {
        "field": "_index",
        "value": "failed-{{ _index }}"
      }
    }
  ]
}

GET _ingest/pipeline

DELETE _ingest/pipeline/calculate-ages

GET filebeat-7.17.0-2022.03.11/_count

POST filebeat-7.17.0-2022.03.11/_doc?pipeline=calculate-ages
{
  "field" : "value",
   ....
}

GET fail

GET filebeat-7.17.0-2022.03.11/_doc/


DELETE filebeat-7.17.0-2022.03.11

POST _ingest/pipeline/_simulate
{
  "pipeline": {
    "processors": [
      {
        "script": {
          "description": "How old is this opensource project?",
          "lang": "painless",
          "source": """
          ZonedDateTime zdt1 = ZonedDateTime.parse(ctx['json.created_at']);

          String nowString = params['now'];
          ZonedDateTime nowZdt = ZonedDateTime.parse(nowString);
          ZonedDateTime zdt2 = ZonedDateTime.parse(ctx['json.updated_at']);          long years = ChronoUnit.YEARS.between(zdt1, zdt2);
          ctx['project_age'] = years;
          """
        }
      }
    ]
  },
  "docs": [
    {
      "_source": {
        "json.created_at": "2014-07-30T20:04:05Z",
        "json.updated_at": "2015-07-30T20:04:05Z"
      }
    }
  ]
}


PUT _ingest/pipeline/project-age
{
    "processors": [
      {
        "script": {
          "description": "How old is it?",
          "lang": "painless",
          "source": """
          
          ZonedDateTime zdt1 = ZonedDateTime.parse(ctx['json.created_at']);
    
          
          ZonedDateTime zdt2 = ZonedDateTime.parse(ctx['json.updated_at']);
          long years = ChronoUnit.YEARS.between(zdt1, zdt2);
          ctx['project_age'] = years;
          """
        }
      }
    ]
 }
 
 GET _ingest/pipeline/
 
 DELETE _ingest/pipeline/project-age



"_source": {
    "@timestamp": "2022-03-10T05:38:14.608Z",
    "fields": {
      "project": "origin",
      "kpi": "overall"
    },
    "json": {
      "node_id": "MDEwOlJlcG9zaXRvcnkyMjQ0MjY2OA==",
      "temp_clone_token": "",
      "blobs_url": "https://api.github.com/repos/openshift/origin/git/blobs{/sha}",
      "full_name": "openshift/origin",
      "pushed_at": "2022-03-10T01:33:21Z",
      "clone_url": "https://github.com/openshift/origin.git",
      "deployments_url": "https://api.github.com/repos/openshift/origin/deployments",
      "html_url": "https://github.com/openshift/origin",
      "milestones_url": "https://api.github.com/repos/openshift/origin/milestones{/number}",
      "teams_url": "https://api.github.com/repos/openshift/origin/teams",
      "collaborators_url": "https://api.github.com/repos/openshift/origin/collaborators{/collaborator}",
      "forks": 4676,
      "organization": {
        "starred_url": "https://api.github.com/users/openshift/starred{/owner}{/repo}",
        "events_url": "https://api.github.com/users/openshift/events{/privacy}",
        "followers_url": "https://api.github.com/users/openshift/followers",
        "id": 792337,
        "repos_url": "https://api.github.com/users/openshift/repos",
        "site_admin": false,
        "login": "openshift",
        "subscriptions_url": "https://api.github.com/users/openshift/subscriptions",
        "url": "https://api.github.com/users/openshift",
        "avatar_url": "https://avatars.githubusercontent.com/u/792337?v=4",
        "gravatar_id": "",
        "organizations_url": "https://api.github.com/users/openshift/orgs",
        "received_events_url": "https://api.github.com/users/openshift/received_events",
        "type": "Organization",
        "following_url": "https://api.github.com/users/openshift/following{/other_user}",
        "gists_url": "https://api.github.com/users/openshift/gists{/gist_id}",
        "html_url": "https://github.com/openshift",
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjc5MjMzNw=="
      },
      "releases_url": "https://api.github.com/repos/openshift/origin/releases{/id}",
      "stargazers_url": "https://api.github.com/repos/openshift/origin/stargazers",
      "svn_url": "https://github.com/openshift/origin",
      "topics": [
        "caas",
        "ci-cd",
        "containers",
        "continuous-delivery",
        "continuous-deployment",
        "continuous-integration",
        "devops",
        "go",
        "kubernetes",
        "openshift",
        "openshift-origin",
        "paas"
      ],
      "assignees_url": "https://api.github.com/repos/openshift/origin/assignees{/user}",
      "compare_url": "https://api.github.com/repos/openshift/origin/compare/{base}...{head}",
      "git_refs_url": "https://api.github.com/repos/openshift/origin/git/refs{/sha}",
      "has_wiki": false,
      "id": 22442668,
      "owner": {
        "gravatar_id": "",
        "organizations_url": "https://api.github.com/users/openshift/orgs",
        "received_events_url": "https://api.github.com/users/openshift/received_events",
        "subscriptions_url": "https://api.github.com/users/openshift/subscriptions",
        "site_admin": false,
        "type": "Organization",
        "url": "https://api.github.com/users/openshift",
        "events_url": "https://api.github.com/users/openshift/events{/privacy}",
        "followers_url": "https://api.github.com/users/openshift/followers",
        "gists_url": "https://api.github.com/users/openshift/gists{/gist_id}",
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjc5MjMzNw==",
        "following_url": "https://api.github.com/users/openshift/following{/other_user}",
        "id": 792337,
        "repos_url": "https://api.github.com/users/openshift/repos",
        "starred_url": "https://api.github.com/users/openshift/starred{/owner}{/repo}",
        "avatar_url": "https://avatars.githubusercontent.com/u/792337?v=4",
        "html_url": "https://github.com/openshift",
        "login": "openshift"
      },
      "archived": false,
      "issues_url": "https://api.github.com/repos/openshift/origin/issues{/number}",
      "labels_url": "https://api.github.com/repos/openshift/origin/labels{/name}",
      "license": {
        "key": "apache-2.0",
        "name": "Apache License 2.0",
        "node_id": "MDc6TGljZW5zZTI=",
        "spdx_id": "Apache-2.0",
        "url": "https://api.github.com/licenses/apache-2.0"
      },
      "pulls_url": "https://api.github.com/repos/openshift/origin/pulls{/number}",
      "stargazers_count": 8072,
      "subscribers_count": 521,
      "visibility": "public",
      "contents_url": "https://api.github.com/repos/openshift/origin/contents/{+path}",
      "description": "Conformance test suite for OpenShift",
      "downloads_url": "https://api.github.com/repos/openshift/origin/downloads",
      "forks_count": 4676,
      "has_issues": true,
      "issue_events_url": "https://api.github.com/repos/openshift/origin/issues/events{/number}",
      "network_count": 4676,
      "trees_url": "https://api.github.com/repos/openshift/origin/git/trees{/sha}",
      "branches_url": "https://api.github.com/repos/openshift/origin/branches{/branch}",
      "url": "https://api.github.com/repos/openshift/origin",
      "has_pages": false,
      "tags_url": "https://api.github.com/repos/openshift/origin/tags",
      "watchers": 8072,
      "fork": false,
      "commits_url": "https://api.github.com/repos/openshift/origin/commits{/sha}",
      "contributors_url": "https://api.github.com/repos/openshift/origin/contributors",
      "has_downloads": true,
      "has_projects": false,
      "languages_url": "https://api.github.com/repos/openshift/origin/languages",
      "mirror_url": null,
      "size": 1192619,
      "comments_url": "https://api.github.com/repos/openshift/origin/comments{/number}",
      "homepage": "http://www.openshift.org",
      "is_template": false,
      "git_url": "git://github.com/openshift/origin.git",
      "forks_url": "https://api.github.com/repos/openshift/origin/forks",
      "git_commits_url": "https://api.github.com/repos/openshift/origin/git/commits{/sha}",
      "git_tags_url": "https://api.github.com/repos/openshift/origin/git/tags{/sha}",
      "merges_url": "https://api.github.com/repos/openshift/origin/merges",
      "name": "origin",
      "ssh_url": "git@github.com:openshift/origin.git",
      "subscribers_url": "https://api.github.com/repos/openshift/origin/subscribers",
      "created_at": "2014-07-30T20:04:05Z",
      "watchers_count": 8072,
      "permissions": {
        "pull": true,
        "push": false,
        "triage": false,
        "admin": false,
        "maintain": false
      },
      "allow_forking": true,
      "updated_at": "2022-03-09T05:35:29Z",
      "open_issues_count": 209,
      "hooks_url": "https://api.github.com/repos/openshift/origin/hooks",
      "notifications_url": "https://api.github.com/repos/openshift/origin/notifications{?since,all,participating}",
      "statuses_url": "https://api.github.com/repos/openshift/origin/statuses/{sha}",
      "archive_url": "https://api.github.com/repos/openshift/origin/{archive_format}{/ref}",
      "language": "Go",
      "private": false,
      "subscription_url": "https://api.github.com/repos/openshift/origin/subscription",
      "issue_comment_url": "https://api.github.com/repos/openshift/origin/issues/comments{/number}",
      "disabled": false,
      "events_url": "https://api.github.com/repos/openshift/origin/events",
      "keys_url": "https://api.github.com/repos/openshift/origin/keys{/key_id}",
      "open_issues": 209,
      "default_branch": "master"
    },
    "event": {
      "created": "2022-03-10T05:38:14.608Z"
    }
  },
  "fields": {
    "json.id": [
      22442668
    ],
    "json.license.url.keyword": [
      "https://api.github.com/licenses/apache-2.0"
    ],
    "json.has_wiki": [
      false
    ],
    "json.owner.node_id": [
      "MDEyOk9yZ2FuaXphdGlvbjc5MjMzNw=="
    ],
    "json.organization.repos_url.keyword": [
      "https://api.github.com/users/openshift/repos"
    ],
    "json.organization.login": [
      "openshift"
    ],
    "json.has_issues": [
      true
    ],
    "json.owner.organizations_url": [
      "https://api.github.com/users/openshift/orgs"
    ],
    "json.open_issues_count": [
      209
    ],
    "json.owner.html_url.keyword": [
      "https://github.com/openshift"
    ],
    "json.default_branch": [
      "master"
    ],
    "json.trees_url": [
      "https://api.github.com/repos/openshift/origin/git/trees{/sha}"
    ],
    "json.owner.html_url": [
      "https://github.com/openshift"
    ],
    "json.subscribers_url": [
      "https://api.github.com/repos/openshift/origin/subscribers"
    ],
    "json.watchers_count": [
      8072
    ],
    "json.license.spdx_id.keyword": [
      "Apache-2.0"
    ],
    "json.owner.url.keyword": [
      "https://api.github.com/users/openshift"
    ],
    "json.license.name": [
      "Apache License 2.0"
    ],
    "json.notifications_url": [
      "https://api.github.com/repos/openshift/origin/notifications{?since,all,participating}"
    ],
    "json.license.key.keyword": [
      "apache-2.0"
    ],
    "json.git_url": [
      "git://github.com/openshift/origin.git"
    ],
    "json.forks_count": [
      4676
    ],
    "json.ssh_url": [
      "git@github.com:openshift/origin.git"
    ],
    "json.deployments_url.keyword": [
      "https://api.github.com/repos/openshift/origin/deployments"
    ],
    "json.owner.login.keyword": [
      "openshift"
    ],
    "json.owner.type.keyword": [
      "Organization"
    ],
    "json.permissions.admin": [
      false
    ],
    "json.owner.followers_url": [
      "https://api.github.com/users/openshift/followers"
    ],
    "fields.project.keyword": [
      "origin"
    ],
    "json.languages_url.keyword": [
      "https://api.github.com/repos/openshift/origin/languages"
    ],
    "json.organization.html_url": [
      "https://github.com/openshift"
    ],
    "json.subscribers_count": [
      521
    ],
    "json.license.key": [
      "apache-2.0"
    ],
    "json.organization.following_url": [
      "https://api.github.com/users/openshift/following{/other_user}"
    ],
    "json.archive_url": [
      "https://api.github.com/repos/openshift/origin/{archive_format}{/ref}"
    ],
    "json.trees_url.keyword": [
      "https://api.github.com/repos/openshift/origin/git/trees{/sha}"
    ],
    "json.has_projects": [
      false
    ],
    "json.full_name.keyword": [
      "openshift/origin"
    ],
    "json.forks_url.keyword": [
      "https://api.github.com/repos/openshift/origin/forks"
    ],
    "json.owner.following_url": [
      "https://api.github.com/users/openshift/following{/other_user}"
    ],
    "json.teams_url.keyword": [
      "https://api.github.com/repos/openshift/origin/teams"
    ],
    "json.organization.node_id": [
      "MDEyOk9yZ2FuaXphdGlvbjc5MjMzNw=="
    ],
    "json.commits_url": [
      "https://api.github.com/repos/openshift/origin/commits{/sha}"
    ],
    "json.collaborators_url.keyword": [
      "https://api.github.com/repos/openshift/origin/collaborators{/collaborator}"
    ],
    "json.blobs_url": [
      "https://api.github.com/repos/openshift/origin/git/blobs{/sha}"
    ],
    "json.owner.gists_url": [
      "https://api.github.com/users/openshift/gists{/gist_id}"
    ],
    "json.organization.node_id.keyword": [
      "MDEyOk9yZ2FuaXphdGlvbjc5MjMzNw=="
    ],
    "json.owner.following_url.keyword": [
      "https://api.github.com/users/openshift/following{/other_user}"
    ],
    "json.commits_url.keyword": [
      "https://api.github.com/repos/openshift/origin/commits{/sha}"
    ],
    "json.homepage.keyword": [
      "http://www.openshift.org"
    ],
    "json.organization.login.keyword": [
      "openshift"
    ],
    "json.owner.avatar_url": [
      "https://avatars.githubusercontent.com/u/792337?v=4"
    ],
    "json.owner.subscriptions_url": [
      "https://api.github.com/users/openshift/subscriptions"
    ],
    "json.organization.following_url.keyword": [
      "https://api.github.com/users/openshift/following{/other_user}"
    ],
    "json.pulls_url.keyword": [
      "https://api.github.com/repos/openshift/origin/pulls{/number}"
    ],
    "json.owner.type": [
      "Organization"
    ],
    "json.issue_comment_url.keyword": [
      "https://api.github.com/repos/openshift/origin/issues/comments{/number}"
    ],
    "json.contents_url": [
      "https://api.github.com/repos/openshift/origin/contents/{+path}"
    ],
    "json.forks": [
      4676
    ],
    "json.license.name.keyword": [
      "Apache License 2.0"
    ],
    "json.contents_url.keyword": [
      "https://api.github.com/repos/openshift/origin/contents/{+path}"
    ],
    "json.owner.repos_url": [
      "https://api.github.com/users/openshift/repos"
    ],
    "json.organization.url": [
      "https://api.github.com/users/openshift"
    ],
    "json.git_refs_url": [
      "https://api.github.com/repos/openshift/origin/git/refs{/sha}"
    ],
    "json.has_pages": [
      false
    ],
    "json.organization.site_admin": [
      false
    ],
    "json.language": [
      "Go"
    ],
    "json.issues_url.keyword": [
      "https://api.github.com/repos/openshift/origin/issues{/number}"
    ],
    "json.owner.organizations_url.keyword": [
      "https://api.github.com/users/openshift/orgs"
    ],
    "json.releases_url": [
      "https://api.github.com/repos/openshift/origin/releases{/id}"
    ],
    "json.full_name": [
      "openshift/origin"
    ],
    "json.owner.node_id.keyword": [
      "MDEyOk9yZ2FuaXphdGlvbjc5MjMzNw=="
    ],
    "json.organization.received_events_url": [
      "https://api.github.com/users/openshift/received_events"
    ],
    "json.blobs_url.keyword": [
      "https://api.github.com/repos/openshift/origin/git/blobs{/sha}"
    ],
    "json.organization.gists_url.keyword": [
      "https://api.github.com/users/openshift/gists{/gist_id}"
    ],
    "json.license.node_id.keyword": [
      "MDc6TGljZW5zZTI="
    ],
    "json.organization.starred_url.keyword": [
      "https://api.github.com/users/openshift/starred{/owner}{/repo}"
    ],
    "json.organization.id": [
      792337
    ],
    "json.owner.gists_url.keyword": [
      "https://api.github.com/users/openshift/gists{/gist_id}"
    ],
    "json.keys_url.keyword": [
      "https://api.github.com/repos/openshift/origin/keys{/key_id}"
    ],
    "json.stargazers_count": [
      8072
    ],
    "json.branches_url": [
      "https://api.github.com/repos/openshift/origin/branches{/branch}"
    ],
    "json.contributors_url.keyword": [
      "https://api.github.com/repos/openshift/origin/contributors"
    ],
    "json.organization.gravatar_id.keyword": [
      ""
    ],
    "json.organization.type": [
      "Organization"
    ],
    "json.visibility": [
      "public"
    ],
    "json.fork": [
      false
    ],
    "json.owner.starred_url.keyword": [
      "https://api.github.com/users/openshift/starred{/owner}{/repo}"
    ],
    "json.comments_url.keyword": [
      "https://api.github.com/repos/openshift/origin/comments{/number}"
    ],
    "json.milestones_url.keyword": [
      "https://api.github.com/repos/openshift/origin/milestones{/number}"
    ],
    "json.assignees_url": [
      "https://api.github.com/repos/openshift/origin/assignees{/user}"
    ],
    "json.license.node_id": [
      "MDc6TGljZW5zZTI="
    ],
    "json.collaborators_url": [
      "https://api.github.com/repos/openshift/origin/collaborators{/collaborator}"
    ],
    "json.git_tags_url.keyword": [
      "https://api.github.com/repos/openshift/origin/git/tags{/sha}"
    ],
    "json.html_url": [
      "https://github.com/openshift/origin"
    ],
    "json.owner.received_events_url.keyword": [
      "https://api.github.com/users/openshift/received_events"
    ],
    "json.owner.events_url": [
      "https://api.github.com/users/openshift/events{/privacy}"
    ],
    "json.updated_at": [
      "2022-03-09T05:35:29.000Z"
    ],
    "json.owner.avatar_url.keyword": [
      "https://avatars.githubusercontent.com/u/792337?v=4"
    ],
    "json.tags_url.keyword": [
      "https://api.github.com/repos/openshift/origin/tags"
    ],
    "json.organization.gravatar_id": [
      ""
    ],
    "json.created_at": [
      "2014-07-30T20:04:05.000Z"
    ],
    "json.merges_url.keyword": [
      "https://api.github.com/repos/openshift/origin/merges"
    ],
    "json.clone_url": [
      "https://github.com/openshift/origin.git"
    ],
    "json.watchers": [
      8072
    ],
    "json.organization.events_url.keyword": [
      "https://api.github.com/users/openshift/events{/privacy}"
    ],
    "json.merges_url": [
      "https://api.github.com/repos/openshift/origin/merges"
    ],
    "json.organization.url.keyword": [
      "https://api.github.com/users/openshift"
    ],
    "json.ssh_url.keyword": [
      "git@github.com:openshift/origin.git"
    ],
    "json.permissions.pull": [
      true
    ],
    "json.git_url.keyword": [
      "git://github.com/openshift/origin.git"
    ],
    "json.clone_url.keyword": [
      "https://github.com/openshift/origin.git"
    ],
    "json.disabled": [
      false
    ],
    "json.license.spdx_id": [
      "Apache-2.0"
    ],
    "json.issue_events_url": [
      "https://api.github.com/repos/openshift/origin/issues/events{/number}"
    ],
    "json.git_refs_url.keyword": [
      "https://api.github.com/repos/openshift/origin/git/refs{/sha}"
    ],
    "json.owner.url": [
      "https://api.github.com/users/openshift"
    ],
    "json.default_branch.keyword": [
      "master"
    ],
    "json.permissions.triage": [
      false
    ],
    "json.git_tags_url": [
      "https://api.github.com/repos/openshift/origin/git/tags{/sha}"
    ],
    "json.owner.gravatar_id.keyword": [
      ""
    ],
    "json.pulls_url": [
      "https://api.github.com/repos/openshift/origin/pulls{/number}"
    ],
    "json.name": [
      "origin"
    ],
    "json.organization.repos_url": [
      "https://api.github.com/users/openshift/repos"
    ],
    "json.tags_url": [
      "https://api.github.com/repos/openshift/origin/tags"
    ],
    "json.homepage": [
      "http://www.openshift.org"
    ],
    "json.organization.events_url": [
      "https://api.github.com/users/openshift/events{/privacy}"
    ],
    "json.organization.avatar_url": [
      "https://avatars.githubusercontent.com/u/792337?v=4"
    ],
    "json.network_count": [
      4676
    ],
    "json.organization.followers_url.keyword": [
      "https://api.github.com/users/openshift/followers"
    ],
    "json.events_url.keyword": [
      "https://api.github.com/repos/openshift/origin/events"
    ],
    "json.owner.starred_url": [
      "https://api.github.com/users/openshift/starred{/owner}{/repo}"
    ],
    "json.releases_url.keyword": [
      "https://api.github.com/repos/openshift/origin/releases{/id}"
    ],
    "json.subscription_url.keyword": [
      "https://api.github.com/repos/openshift/origin/subscription"
    ],
    "json.organization.subscriptions_url.keyword": [
      "https://api.github.com/users/openshift/subscriptions"
    ],
    "json.notifications_url.keyword": [
      "https://api.github.com/repos/openshift/origin/notifications{?since,all,participating}"
    ],
    "json.teams_url": [
      "https://api.github.com/repos/openshift/origin/teams"
    ],
    "json.owner.followers_url.keyword": [
      "https://api.github.com/users/openshift/followers"
    ],
    "json.temp_clone_token": [
      ""
    ],
    "json.is_template": [
      false
    ],
    "json.organization.html_url.keyword": [
      "https://github.com/openshift"
    ],
    "json.license.url": [
      "https://api.github.com/licenses/apache-2.0"
    ],
    "json.forks_url": [
      "https://api.github.com/repos/openshift/origin/forks"
    ],
    "json.node_id.keyword": [
      "MDEwOlJlcG9zaXRvcnkyMjQ0MjY2OA=="
    ],
    "json.labels_url.keyword": [
      "https://api.github.com/repos/openshift/origin/labels{/name}"
    ],
    "json.stargazers_url.keyword": [
      "https://api.github.com/repos/openshift/origin/stargazers"
    ],
    "json.assignees_url.keyword": [
      "https://api.github.com/repos/openshift/origin/assignees{/user}"
    ],
    "json.url.keyword": [
      "https://api.github.com/repos/openshift/origin"
    ],
    "json.private": [
      false
    ],
    "json.organization.organizations_url": [
      "https://api.github.com/users/openshift/orgs"
    ],
    "json.hooks_url.keyword": [
      "https://api.github.com/repos/openshift/origin/hooks"
    ],
    "json.owner.received_events_url": [
      "https://api.github.com/users/openshift/received_events"
    ],
    "json.owner.id": [
      792337
    ],
    "json.deployments_url": [
      "https://api.github.com/repos/openshift/origin/deployments"
    ],
    "json.hooks_url": [
      "https://api.github.com/repos/openshift/origin/hooks"
    ],
    "json.languages_url": [
      "https://api.github.com/repos/openshift/origin/languages"
    ],
    "json.subscribers_url.keyword": [
      "https://api.github.com/repos/openshift/origin/subscribers"
    ],
    "json.topics": [
      "caas",
      "ci-cd",
      "containers",
      "continuous-delivery",
      "continuous-deployment",
      "continuous-integration",
      "devops",
      "go",
      "kubernetes",
      "openshift",
      "openshift-origin",
      "paas"
    ],
    "json.statuses_url": [
      "https://api.github.com/repos/openshift/origin/statuses/{sha}"
    ],
    "json.owner.repos_url.keyword": [
      "https://api.github.com/users/openshift/repos"
    ],
    "json.url": [
      "https://api.github.com/repos/openshift/origin"
    ],
    "json.git_commits_url": [
      "https://api.github.com/repos/openshift/origin/git/commits{/sha}"
    ],
    "json.milestones_url": [
      "https://api.github.com/repos/openshift/origin/milestones{/number}"
    ],
    "json.owner.subscriptions_url.keyword": [
      "https://api.github.com/users/openshift/subscriptions"
    ],
    "json.contributors_url": [
      "https://api.github.com/repos/openshift/origin/contributors"
    ],
    "json.stargazers_url": [
      "https://api.github.com/repos/openshift/origin/stargazers"
    ],
    "json.archive_url.keyword": [
      "https://api.github.com/repos/openshift/origin/{archive_format}{/ref}"
    ],
    "json.downloads_url.keyword": [
      "https://api.github.com/repos/openshift/origin/downloads"
    ],
    "json.html_url.keyword": [
      "https://github.com/openshift/origin"
    ],
    "json.issue_comment_url": [
      "https://api.github.com/repos/openshift/origin/issues/comments{/number}"
    ],
    "@timestamp": [
      "2022-03-10T05:38:14.608Z"
    ],
    "json.organization.gists_url": [
      "https://api.github.com/users/openshift/gists{/gist_id}"
    ],
    "json.owner.login": [
      "openshift"
    ],
    "json.description": [
      "Conformance test suite for OpenShift"
    ],
    "json.events_url": [
      "https://api.github.com/repos/openshift/origin/events"
    ],
    "json.node_id": [
      "MDEwOlJlcG9zaXRvcnkyMjQ0MjY2OA=="
    ],
    "json.organization.starred_url": [
      "https://api.github.com/users/openshift/starred{/owner}{/repo}"
    ],
    "json.labels_url": [
      "https://api.github.com/repos/openshift/origin/labels{/name}"
    ],
    "json.compare_url.keyword": [
      "https://api.github.com/repos/openshift/origin/compare/{base}...{head}"
    ],
    "json.size": [
      1192619
    ],
    "json.language.keyword": [
      "Go"
    ],
    "json.organization.followers_url": [
      "https://api.github.com/users/openshift/followers"
    ],
    "json.svn_url": [
      "https://github.com/openshift/origin"
    ],
    "json.git_commits_url.keyword": [
      "https://api.github.com/repos/openshift/origin/git/commits{/sha}"
    ],
    "json.issue_events_url.keyword": [
      "https://api.github.com/repos/openshift/origin/issues/events{/number}"
    ],
    "json.svn_url.keyword": [
      "https://github.com/openshift/origin"
    ],
    "json.downloads_url": [
      "https://api.github.com/repos/openshift/origin/downloads"
    ],
    "json.allow_forking": [
      true
    ],
    "json.temp_clone_token.keyword": [
      ""
    ],
    "json.organization.type.keyword": [
      "Organization"
    ],
    "json.permissions.maintain": [
      false
    ],
    "json.owner.site_admin": [
      false
    ],
    "json.visibility.keyword": [
      "public"
    ],
    "json.owner.gravatar_id": [
      ""
    ],
    "json.organization.subscriptions_url": [
      "https://api.github.com/users/openshift/subscriptions"
    ],
    "fields.kpi": [
      "overall"
    ],
    "event.created": [
      "2022-03-10T05:38:14.608Z"
    ],
    "json.comments_url": [
      "https://api.github.com/repos/openshift/origin/comments{/number}"
    ],
    "json.owner.events_url.keyword": [
      "https://api.github.com/users/openshift/events{/privacy}"
    ],
    "json.open_issues": [
      209
    ],
    "json.statuses_url.keyword": [
      "https://api.github.com/repos/openshift/origin/statuses/{sha}"
    ],
    "json.compare_url": [
      "https://api.github.com/repos/openshift/origin/compare/{base}...{head}"
    ],
    "fields.project": [
      "origin"
    ],
    "json.name.keyword": [
      "origin"
    ],
    "json.permissions.push": [
      false
    ],
    "json.organization.avatar_url.keyword": [
      "https://avatars.githubusercontent.com/u/792337?v=4"
    ],
    "json.branches_url.keyword": [
      "https://api.github.com/repos/openshift/origin/branches{/branch}"
    ],
    "json.has_downloads": [
      true
    ],
    "json.pushed_at": [
      "2022-03-10T01:33:21.000Z"
    ],
    "json.issues_url": [
      "https://api.github.com/repos/openshift/origin/issues{/number}"
    ],
    "fields.kpi.keyword": [
      "overall"
    ],
    "json.keys_url": [
      "https://api.github.com/repos/openshift/origin/keys{/key_id}"
    ],
    "json.archived": [
      false
    ],
    "json.organization.organizations_url.keyword": [
      "https://api.github.com/users/openshift/orgs"
    ],
    "json.subscription_url": [
      "https://api.github.com/repos/openshift/origin/subscription"
    ],
    "json.organization.received_events_url.keyword": [
      "https://api.github.com/users/openshift/received_events"
    ]
  }